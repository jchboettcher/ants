{"version":3,"sources":["theme.js","client.js","config.js","containers/Home/index.js","containers/Leaderboard/styles.js","containers/Leaderboard/components/Description.js","containers/Leaderboard/components/Entry.js","containers/graphql.js","containers/Leaderboard/components/Scores.js","containers/Leaderboard/index.js","containers/Submit/styles.js","containers/Submit/components/Input.js","containers/Submit/components/Form.js","containers/Submit/index.js","App.js","index.js"],"names":["theme","colors","primaryText","mainBackground","fonts","primary","family","weight","httpLink","HttpLink","uri","credentials","middlewareLink","ApolloLink","operation","forward","token","localStorage","getItem","setContext","headers","authorization","errorLink","onError","client","ApolloClient","cache","InMemoryCache","link","from","Home","BackgroundDiv","styled","div","LeaderboardDiv","StyledTd","td","RankTd","NameTd","PuzzTd","TimeTd","StyledTable","table","StyledTableBody","tbody","StyledTableHead","thead","LeaderboardHeader","h1","Description","str","index","displayName","score","updatedAt","Date","parseInt","toLocaleString","timeZone","Entry","data","ALL_USERS","gql","GET_USER","ADD_USER","UPDATE_SCORE","Scores","useQuery","partialRefetch","error","onCompleted","queryError","queryLoading","loading","allUsers","map","entry","indexOf","id","useEffect","document","title","StyledInput","input","FancyButton","button","FormDiv","InputDiv","LeftDiv","RightDiv","MessageDiv","ErrorMsg","p","LoadingMsg","Input","label","state","setState","onKeyPress","value","onChange","e","target","Form","useState","name","setName","password","setPass","exists","setExists","auth","setAuth","first","setFirst","err","setErr","user","setUser","bad","setBad","useLazyQuery","console","log","userByName","userLoading","addUser","variables","getUser","useMutation","addLoading","newScore","buttonClicked","l","length","test","verifyUsername","handleKeypress","code","onClick","Submit","App","basename","className","path","component","Leaderboard","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a6739048.chunk.js","sourcesContent":["// Add global styles and fonts here\n\nconst theme = {\n  colors: {\n    primaryText: '#232323',\n    mainBackground: '#F2F2F2',\n  },\n  fonts: {\n    primary: {\n      family: 'Source Sans Pro, sans-serif',\n      weight: 400,\n    },\n  },\n}\n\nexport default theme\n","import { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\nimport { onError } from 'apollo-link-error'\nimport { ApolloLink } from 'apollo-link'\nimport config from './config'\n\nconst httpLink = new HttpLink({\n  uri: config.graphqlUrl,\n  credentials: 'include',\n})\n\n\nconst middlewareLink = new ApolloLink((operation, forward) => {\n  const token = localStorage.getItem('token')\n  if (token) {\n    operation.setContext({\n      headers: {\n        authorization: token,\n      },\n    })\n  }\n\n  return forward(operation)\n})\n\nconst errorLink = onError(() => {\n  // Handle specific errors here\n  //   e.g. redirect to login on AuthenticationError\n})\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: ApolloLink.from([\n    errorLink,\n    middlewareLink,\n    httpLink,\n  ]),\n})\n\nexport default client\n","export default {\n  graphqlUrl: 'https://ants-on-a-picnic-backend.herokuapp.com/',\n}\n","import React from 'react'\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Welcome to Harvard Puzzle Hunt twice!</h1>\n    </div>\n  )\n}\n\nexport default Home\n","import styled from 'styled-components'\n\nexport const BackgroundDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  background-color: palegoldenrod;\n`\n\nexport const LeaderboardDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  padding: 10px;\n  margin: 20px auto 100px auto;\n  /* border: rgba(40,40,40,0.5) 4px; */\n  /* border-style: solid; */\n  /* height: auto; */\n  text-align: center;\n  font-family: Arial, Helvetica, sans-serif;\n  /* position: fixed; */\n  top: 2vh;\n  /* background-color: rgba(108,128,150,0.8); */\n  /* animation: color-change 40s infinite;\n  position: center;\n  @keyframes color-change {\n    0% { background-color: rgba(100,128,150,0.8); }\n    20% { background-color: rgba(128,128,100,0.8); }\n    40% { background-color: rgba(100,128,128,0.8); }\n    60% { background-color: rgba(150,100,128,0.8); }\n    80% { background-color: rgba(128,150,100,0.8); }\n    100% { background-color: rgba(108,128,150,0.8); }\n  } */\n`\n\nexport const StyledTd = styled.td`\n  padding: 20px;\n  border: solid;\n  border-color: palegoldenrod;\n  border-width: 5px;\n`\n\nexport const RankTd = styled(StyledTd)`\n  width: 52px;\n`\n\nexport const NameTd = styled(StyledTd)`\n  width: 185px;\n`\n\nexport const PuzzTd = styled(StyledTd)`\n  width: 140px;\n`\n\nexport const TimeTd = styled(StyledTd)`\n  width: 200px;\n`\n\nexport const StyledTable = styled.table`\n  border-collapse: collapse;\n  /* margin: 10px; */\n`\n\nexport const StyledTableBody = styled.tbody`\n  background-color: rgb(10,150,10);\n`\n\nexport const StyledTableHead = styled.thead`\n  font-weight: bold;\n  font-size: 18px;\n  background-color: rgb(10,120,10);\n`\n\nexport const LeaderboardHeader = styled.h1`\n  font-weight: bold;\n  font-size: 45px;\n`","import React from 'react'\nimport { RankTd, NameTd, PuzzTd, TimeTd } from '../styles'\n\nconst Description = ({\n  index, displayName, score, updatedAt,\n}) => {\n  const mill_to_date = str => {\n    const date = new Date(parseInt(str))\n    return date.toLocaleString(\"en-US\", {timeZone: 'EST'})\n  }\n  return (\n    <tr>\n      <RankTd>{`${index + 1}`}</RankTd>\n      <NameTd>{`${displayName}`}</NameTd>\n      <PuzzTd>{`${score}`}</PuzzTd>\n      <TimeTd>{`${mill_to_date(updatedAt) + ' EST'}`}</TimeTd>\n    </tr>\n  )\n}\n\nexport default Description","import React from 'react'\n// import {\n//   StyledTd,\n// } from '../styles'\nimport Description from './Description'\n\nconst Entry = ({\n  index, displayName, score, updatedAt,\n}) => {\n  const data = {\n    index, displayName, score, updatedAt,\n  }\n  return (\n    <>\n      {index\n        ? (\n            index % 2 ? (\n            // <OddEntryDiv>\n              <Description {...data} />\n            // </OddEntryDiv>\n          )\n            : (\n            //   <EvenEntryDiv>\n                <Description {...data} />\n            //   </EvenEntryDiv>\n            )\n        )\n        : (\n        //   <TopEntryDiv>\n            <Description {...data} />\n        //   </TopEntryDiv>\n        )}\n    </>\n  )\n}\n\nexport default Entry\n","import gql from 'graphql-tag'\n\nexport const ALL_USERS = gql`\n  query allUsers {\n    allUsers {\n      id\n      displayName\n      score\n      updatedAt\n    }\n  }\n`\n\nexport const GET_USER = gql`\n  query userByName($name: String!, $password: String!) {\n    userByName(displayName: $name, password: $password) {\n      id\n      displayName\n      rank\n      score\n    }\n  }\n`\n\n// export const CHECK_PASS = gql`\n//   query checkPass($name: String!, $password: String!) {\n//     checkPass(displayName: $name, password: $password) {\n//       id\n//       displayName\n//       rank\n//       score\n//     }\n//   }\n// `\n\nexport const ADD_USER = gql`\n  mutation addUser($input: AddUser!) {\n    addUser(input: $input) {\n      id\n      displayName\n      rank\n      score\n    }\n  }\n`\n\nexport const UPDATE_SCORE = gql`\n  mutation updateScore($id: ID!, $score: Int!) {\n    updateScore(id: $id, newScore: $score) {\n      id\n      displayName\n      score\n      rank\n    }\n  }\n`\n","import React from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport Entry from './Entry'\nimport {\n  StyledTable,\n  RankTd,\n  NameTd,\n  PuzzTd,\n  TimeTd,\n  StyledTableBody,\n  StyledTableHead,\n} from '../styles'\nimport { ALL_USERS } from '../../graphql'\n\nconst Scores = () => {\n  const { data, error: queryError, loading: queryLoading } = useQuery(ALL_USERS, {\n    partialRefetch: true,\n    onError: error => { return },\n    onCompleted: data => { return },\n  })\n  return (\n    <>\n      <StyledTable>\n        <StyledTableHead>\n          <tr>\n            <RankTd>Rank</RankTd>\n            <NameTd>Username</NameTd>\n            <PuzzTd>Puzzles Solved</PuzzTd>\n            <TimeTd>Time of Last Solve</TimeTd>\n          </tr>\n        </StyledTableHead>\n        <StyledTableBody>\n        {queryLoading || queryError || (\n          data.allUsers.map(entry => (\n            entry ? (\n              <Entry\n                key={entry.id}\n                index={data.allUsers.indexOf(entry)}\n                {...entry}\n              />\n            ) : ''\n          )))}\n        </StyledTableBody>\n      </StyledTable>\n      {queryLoading && <p>Fetching data...</p>}\n      {queryError && <p>Failed to fetch data, try refreshing the page.</p>}\n    </>\n  )\n}\n\nexport default Scores","import React, { useEffect } from 'react'\nimport Scores from './components/Scores'\nimport {\n  LeaderboardDiv,\n  BackgroundDiv,\n  LeaderboardHeader,\n} from './styles'\n\nconst Home = () => {\n  useEffect(() => {\n    document.title = \"Leaderboard\"\n  }, [])\n  return (\n    <BackgroundDiv>\n      <LeaderboardDiv>\n        <LeaderboardHeader>Leaderboard</LeaderboardHeader>\n        <Scores/>\n      </LeaderboardDiv>\n    </BackgroundDiv>\n  )\n}\n\nexport default Home\n","import styled from 'styled-components'\n\nexport const BackgroundDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100vw;\n  height: 100vh;\n  margin: 0;\n  background-color: palegoldenrod;\n`\n\nexport const StyledInput = styled.input`\n  padding: auto;\n  margin: auto;\n  width: 160px;\n`\n\nexport const FancyButton = styled.button`\n  background: rgb(100,220,100);\n  border: black 1px;\n  border-style: solid;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-top: 10px;\n  width: 80px;\n  align-self: center;\n\n  &:hover {\n    color: white;\n    background-color: rgb(10,150,10);\n  }\n`\n\nexport const FormDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  /* padding: -10px; */\n  width: 500px;\n  font-family: Arial, Helvetica, sans-serif;\n  position: fixed;\n  top: 3vh;\n`\n\nexport const InputDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  /* padding: -10px; */\n  margin: -5px;\n  /* text-align: center; */\n  font-family: Arial, Helvetica, sans-serif;\n`\n\nexport const LeftDiv = styled.div`\n  margin: auto;\n  align-items: right;\n  text-align: right;\n  /* border: solid black 2px; */\n  width: 225px;\n`\n\nexport const RightDiv = styled.div`\n  margin: auto;\n  align-items: left;\n  text-align: left;\n  /* border: solid black 2px; */\n  width: 275px;\n`\n\nexport const MessageDiv = styled.div`\n  text-align: center;\n  width: 500px;\n`\n\nexport const ErrorMsg = styled.p`\n  color: red;\n  font-size: 15px;\n`\n\nexport const LoadingMsg = styled.p`\n  color: black;\n  font-size: 15px;\n`","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport { StyledInput, InputDiv, LeftDiv, RightDiv } from '../styles'\n\nexport const Input = ({\n  label, state, setState, onKeyPress\n}) => (\n  <InputDiv>\n    <LeftDiv>\n      <p>{label}</p>\n    </LeftDiv>\n    <RightDiv>\n      <StyledInput\n        value={state}\n        onChange={e => setState(e.target.value)}\n        onKeyPress={onKeyPress}\n      />\n    </RightDiv>\n  </InputDiv>\n)\n\nexport default Input","import React, { useState } from 'react'\nimport { useLazyQuery, useMutation } from '@apollo/react-hooks'\nimport Input from './Input'\nimport { ADD_USER, GET_USER, UPDATE_SCORE } from '../../graphql'\nimport {\n  FancyButton, FormDiv,\n  MessageDiv, ErrorMsg, LoadingMsg,\n} from '../styles'\n\nconst Form = () => {\n  const [name, setName] = useState('')\n  const [password, setPass] = useState('')\n  const [exists, setExists] = useState(false)\n  const [auth, setAuth] = useState(false)\n  const [first, setFirst] = useState(true)\n  const [err, setErr] = useState(false)\n  const [user, setUser] = useState({})\n  const [bad, setBad] = useState(false)\n  const [getUser, { data: userData, error: userError, loading: userLoading }] = useLazyQuery(GET_USER, {\n    partialRefetch: true,\n    // skip: true,\n    onError: error => { console.log(\"getUser\",error); setErr(true) },\n    onCompleted: data => {\n      // if (clicked) {\n        // setClicked(false)\n        setExists(!!data.userByName)\n        if (!!data.userByName) {\n          console.log(\"finished?\",!userLoading)\n          console.log(\"exists?\",exists)\n          console.log(\"found user:\", data)\n          setAuth(!!data.userByName)\n          if (!!data.userByName) {\n            console.log(data)\n            setUser(data.userByName)\n          }\n          setFirst(false)\n        } else {\n          console.log(\"finished?\",!userLoading)\n          console.log(\"exists?\",exists)\n          console.log(\"did not find user:\", data)\n          addUser({\n            variables: {\n              input: {\n                displayName: name,\n                password,\n              }\n            },\n          })\n        // }\n        // setSkipGet(true)\n      }\n    },\n  })\n  // const [checkPass, { data: passData, error: passError, loading: passLoading }] = useLazyQuery(CHECK_PASS, {\n  //   partialRefetch: true,\n  //   onError: error => { console.log(\"checkPass\",error); setErr(true) },\n  //   onCompleted: data => {\n  //     // if (clicked) {\n  //       setAuth(!!data.checkPass)\n  //       if (!!data.checkPass) {\n  //         console.log(data)\n  //         setUser(data.checkPass)\n  //       }\n  //     // }\n  //   },\n  // })\n  const [addUser, { data: addData, error: addError, loading: addLoading}] = useMutation(ADD_USER, {\n    onError: error => { console.log(\"addUser\",error); setErr(true) },\n    onCompleted: data => {\n      // if (clicked) {\n        setAuth(!!data.addUser)\n        if (!!data.addUser) {\n          console.log(data)\n          setUser(data.addUser)\n        }\n      // }\n      setFirst(false)\n    },\n  })\n  const [updateScore, { data: scoreData, error: scoreError, loading: scoreLoading}] = useMutation(UPDATE_SCORE, {\n    variables: {\n      id: user ? user.id : '',\n      newScore: user ? user.score : 0,\n    },\n    onError: error => { setErr(true) },\n    onCompleted: data => { return },\n  })\n  const loading1 = () => userLoading || addLoading\n  const verifyUsername = () => {\n    const l = name.length\n    if (l < 3 || l > 30) {\n      return false\n    }\n    if (name[0] === ' ' || name[l-1] === ' ') {\n      return false\n    }\n    return (/^[0-9a-zA-Z`~!@#$%^= +\\[\\]{}\\\\|;:'\",<>./?&*_()-]*$/.test(name))\n  }\n  const buttonClicked = () => {\n    // setClicked(true)\n    console.log(\"here\")\n    console.log(\"name:\",name)\n    console.log(\"password:\",password)\n    if (!verifyUsername()) {\n      setBad(true)\n      return\n    }\n    getUser({\n      variables: {\n        name,\n        password,\n      }\n    })\n  }\n  const handleKeypress = e => {\n    console.log(\"here3\")\n    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n      buttonClicked()\n    }\n  }\n  return (\n    <>\n      { !auth ?\n        <FormDiv>\n          <Input\n            label=\"Username (public)\"\n            state={name}\n            setState={name => {\n                setBad(false)\n                setName(name)\n              }\n            }\n            onKeyPress={handleKeypress}\n          />\n          <Input\n            label=\"Password (optional)\"\n            state={password}\n            setState={setPass}\n            onKeyPress={handleKeypress}\n          />\n          <FancyButton onClick={buttonClicked}>Sign In</FancyButton>\n          {/* <p>{`${name} ${password}`}</p> */}\n          <MessageDiv>\n            { bad ? <ErrorMsg>{`Username must have 3-30 characters, no leading or trailing spaces, and use only characters and symbols on a standard keyboard.`}</ErrorMsg> :\n              first ||\n              (err ? <ErrorMsg>{`Error loading user, please refresh the page.`}</ErrorMsg> :\n              loading1() ? <LoadingMsg>{`Signing in...`}</LoadingMsg> :\n              auth || <ErrorMsg>{`Incorrect password`}</ErrorMsg>)\n            }\n          </MessageDiv>\n        </FormDiv>\n      : <>\n          <p>{`Welcome${exists ? ' back,' : ','} ${user.displayName}!`}</p>\n          <p>{`Current puzzle: ${user.score + 1}`}</p>\n        </>\n      }\n    </>\n  )\n}\n\nexport default Form\n","import React, { useEffect } from 'react'\nimport {\n  BackgroundDiv,\n} from './styles'\nimport Form from './components/Form'\n\nconst Submit = () => {\n  useEffect(() => {\n    document.title = \"Submit\"\n  }, [])\n  return (\n    <BackgroundDiv>\n      <Form/>\n    </BackgroundDiv>\n  )\n}\n\nexport default Submit\n","import React from 'react'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom'\nimport { ThemeProvider } from 'styled-components'\nimport theme from './theme'\nimport client from './client'\nimport Home from './containers/Home'\nimport Leaderboard from './containers/Leaderboard'\nimport Submit from './containers/Submit'\n\nconst App = () => (\n  <Router basename=\"/ants\">\n    <ThemeProvider theme={theme}>\n      <ApolloProvider client={client}>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/submit\" component={Submit} />\n            <Route path=\"/leaderboard\" component={Leaderboard} />\n            <Route path=\"/\" component={Home} />\n          </Switch>\n        </div>\n      </ApolloProvider>\n    </ThemeProvider>\n  </Router>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}