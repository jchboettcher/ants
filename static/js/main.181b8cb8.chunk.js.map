{"version":3,"sources":["theme.js","client.js","config.js","containers/Level/styles.js","containers/Level/levels.js","containers/Level/components/LevelCanvas.js","containers/Level/components/Description.js","containers/Level/index.js","containers/HomePage/index.js","containers/LevelPage/index.js","App.js","index.js"],"names":["theme","fonts","primary","family","httpLink","HttpLink","uri","credentials","middlewareLink","ApolloLink","operation","forward","token","localStorage","getItem","setContext","headers","authorization","errorLink","onError","client","ApolloClient","cache","InMemoryCache","link","from","BackgroundDiv","styled","div","LevelDiv","HowToDiv","CenterDiv","Title","h1","Subtitle","h3","Paragraph","p","HowToPara","EmptyDiv","gridStrs","LevelCanvas","w","h","sqsize","antCount","level","offleft","offtop","bHeight","gridStr","grid","ants","locked","started","killed","won","won2","steps","painted","picnicExists","picnic","currButton","fr","step","forEach","ant","move","rotate","mouseInX","mouseInY","mode","winPos","Ant","x","y","dir","type","this","xmoves","ymoves","stopped","picnicAnt","whiteMove","blackMove","actualMove","R","L","S","U","p5","push","translate","HALF_PI","stroke","strokeWeight","fill","scale","ellipse","pop","noFill","beginShape","vertex","curveVertex","endShape","setup","canvasParentRef","reset","frameRate","i","j","len","length","dirs","D","k","c","typ","substring","Array","b","createCanvas","parent","buttonTexts","buttons","buttonFuncs","style","color","button","createButton","buttonWidth","size","height","pos","width","position","mousePressed","draw","background","rect","rectMode","CENTER","arc","PI","line","noStroke","CLOSE","show","stop","stopCount","test","win","reduce","acc","el","checkWin","textSize","text","textAlign","mouseX","mouseY","Math","floor","lock","mouseDragged","x_","y_","prev","Description","nextLevel","parseInt","href","Level","useEffect","document","title","fontStyle","fontWeight","HomePage","LevelPage","useParams","numLevels","App","basename","ApolloProvider","className","exact","path","keys","join","component","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.181b8cb8.chunk.js","sourcesContent":["const theme = {\n  fonts: {\n    primary: {\n      family: 'Arial, Helvetica, sans-serif',\n    },\n  },\n}\n\nexport default theme\n","import { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\nimport { onError } from 'apollo-link-error'\nimport { ApolloLink } from 'apollo-link'\nimport config from './config'\n\nconst httpLink = new HttpLink({\n  uri: config.graphqlUrl,\n  credentials: 'include',\n})\n\nconst middlewareLink = new ApolloLink((operation, forward) => {\n  const token = localStorage.getItem('token')\n  if (token) {\n    operation.setContext({\n      headers: {\n        authorization: token,\n      },\n    })\n  }\n\n  return forward(operation)\n})\n\nconst errorLink = onError(() => {\n  // Handle specific errors here\n  //   e.g. redirect to login on AuthenticationError\n})\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: ApolloLink.from([\n    errorLink,\n    middlewareLink,\n    httpLink,\n  ]),\n})\n\nexport default client\n","export default {\n  graphqlUrl: 'https://games-leaderboard-backend.herokuapp.com/',\n}\n","import styled from 'styled-components'\n\nexport const BackgroundDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nexport const LevelDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nexport const HowToDiv = styled.div`\n  padding: 5px 0px 30px 30px;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const CenterDiv = styled.div`\n  display: flex;\n  justify-content: left;\n  margin-left: 60px;\n  margin-right: 60px;\n  margin-top: 10px;\n`\n\nexport const Title = styled.h1`\n  font-weight: bold;\n  font-size: 40px;\n  font-family: ${({theme}) => theme.fonts.primary.family};\n  margin-bottom: 0;\n`\n\nexport const Subtitle = styled.h3`\n  font-weight: bold;\n  font-size: 18px;\n  font-family: ${({theme}) => theme.fonts.primary.family};\n  margin-top: 0;\n  margin-bottom: 0;\n`\n\nexport const Paragraph = styled.p`\n  font-family: ${({theme}) => theme.fonts.primary.family};\n  font-size: 15px;\n`\n\nexport const HowToPara = styled.p`\n  font-family: ${({theme}) => theme.fonts.primary.family};\n  font-size: 15px;\n  margin-bottom: 0px;\n`\n\nexport const EmptyDiv = styled.div`\n  height: 25px;\n`","const gridStrs = [\n  \"000000|000000|00P(URLF)00|000000|000000|000000\",\n  \"00000000|00000000|000(DRLF)0000|00000000|000P(URLF)000|00000000|00000000|00000000\",\n  \"00000000|00000000|0000(LRLF)000|00000000|00(URLF)P000|00000000|00000000|00000000\",\n  \"00000000|00(DLRF)00000|0(RRLF)000000|00000000|00000000|00000000|00000P00|00000000\",\n  \"000(DLRF)(DRLF)000|00000000|00000000|00000000|00000000|00000000|000P0000|00000000\",\n  \"000000|000000|00(RLRF+)000|000(DLRF+)00|000000|000000\",\n  \"000000|000000|00(RLRF+)000|000(DLRF+)10|000000|000000\",\n  \"00000000|00000000|00000000|00(DRLF+)0(URLF+)000|0000(URLF)000|00000000|00000000|00000000\",\n  \"00000000|0P000000|00000000|00000(LLRW)00|00000(LLRB)00|00000(LRLW)00|00000000|00000000\",\n  \"00000000000|000(DLRF)0000000|00(RRLF)00000000|00(RRLF)00000000|00000000(LRLF+)00|00000000000|0000(RRLF+)(DRLF)00000|00000000000|000(RRLF)00(DLRF)(LRLF)000|0000000(ULRF)000|00000000000\",\n]\n\nexport default gridStrs","import React from 'react'\nimport Sketch from 'react-p5'\nimport gridStrs from '../levels'\n\nconst LevelCanvas = ({ level }) => {\n  \n  let w\n  let h\n  let sqsize\n  let offright = 22\n  let offleft = 22\n  let offtop = 95\n  let offbottom = 22\n  let bWidth = 50.25\n  let bHeight = 21\n\n  const gridStr = gridStrs[level-1]\n\n  const grid = []\n  let ants = []\n  let locked = []\n\n  let started = false\n  let killed = false\n  let won = false\n  let won2 = 0\n  let steps = 0\n  let painted = 0\n  let antCount\n\n  let picnicExists = false\n  const picnic = {}\n\n  let currButton = 4\n  let fr = 4\n  \n  const setup = (p5, canvasParentRef) => {\n    const reset = () => {\n      p5.frameRate(60)\n      killed = false\n      started = false\n      won = false\n      won2 = 0\n      steps = 0\n      painted = 0\n      let i = 0\n      let j = 0\n      let len = gridStr.length\n      picnicExists = false\n      let dirs = {R: 0, D: 1, L: 2, U:3}\n      ants = []\n      for (let k = 0; k < len; k++) {\n        const c = gridStr[k]\n        if (c === \"|\") {\n          j++\n          i = -1\n        } else if (c === \"(\") {\n          let dir = dirs[gridStr[k+1]]\n          let typ\n          if (gridStr[k+5] === \"+\") {\n            typ = gridStr.substring(k+2,k+6)\n            k += 6\n          } else {\n            typ = gridStr.substring(k+2,k+5)\n            k += 5\n          }\n          ants.push(new Ant(i, j, dir, typ))\n        } else if (c === \"P\") {\n          picnicExists = true\n          picnic.x = i\n          picnic.y = j\n        } else if (c === \"1\") {\n          locked.push([i,j,1])\n        } else if (c === \"2\") {\n          locked.push([i,j,0])\n        }\n        i++\n      }\n      w = i\n      h = j + 1\n      sqsize = 450/w\n      for (let i = 0; i < h; i++) {\n        grid[i] = new Array(w);\n        grid[i].fill(0)\n      }\n      locked.forEach(([x,y,b]) => {\n        grid[y][x] = b\n      })\n      antCount = ants.length\n    }\n    reset()\n    const start = () => {\n      started = true\n      p5.frameRate(fr)\n    }\n    p5.createCanvas(sqsize*w+offright+offleft, sqsize*h+offtop+offbottom).parent(canvasParentRef);\n    const buttonTexts = [\n      'Start', 'Reset', '0.25x', '0.5x', '1x', '2x', '4x', '8x',\n    ]\n    const buttons = []\n    const buttonFuncs = [\n      start, reset, () => {\n        buttons[2].style('background-color',p5.color(190))\n        buttons[currButton].style('background-color',p5.color(230))\n        fr = 1\n        currButton = 2\n      }, () => {\n        buttons[3].style('background-color',p5.color(190))\n        buttons[currButton].style('background-color',p5.color(230))\n        fr = 2\n        currButton = 3\n      }, () => {\n        buttons[4].style('background-color',p5.color(190))\n        buttons[currButton].style('background-color',p5.color(230))\n        fr = 4\n        currButton = 4\n      }, () => {\n        buttons[5].style('background-color',p5.color(190))\n        buttons[currButton].style('background-color',p5.color(230))\n        fr = 8\n        currButton = 5\n      }, () => {\n        buttons[6].style('background-color',p5.color(190))\n        buttons[currButton].style('background-color',p5.color(230))\n        fr = 16\n        currButton = 6\n      }, () => {\n        buttons[7].style('background-color',p5.color(190))\n        buttons[currButton].style('background-color',p5.color(230))\n        fr = 32\n        currButton = 7\n      }\n    ]\n    for (let i = 0; i < buttonTexts.length; i++) {\n      const button = p5.createButton(buttonTexts[i])\n      button.parent(canvasParentRef)\n      let buttonWidth = bWidth\n      if (i < 2) {\n        buttonWidth *= 3\n      }\n      button.size(buttonWidth)\n      bHeight = button.height\n      let pos\n      if (i < 2) {\n        pos = p5.width - offright-buttonWidth*2+buttonWidth*i-1\n      } else {\n        pos = p5.width - offright-buttonWidth*8+buttonWidth*i-1\n      }\n      button.position(pos,offtop-bHeight-1-(i<2 && bHeight+4))\n      button.mousePressed(buttonFuncs[i])\n      if (i === 4) {\n        button.style('background-color',p5.color(190))\n      } else if (i >= 2) {\n        button.style('background-color',p5.color(230))\n      }\n      if (i >= 2) {\n        button.style('border-style','none')\n      }\n      buttons.push(button)\n    }\n  }\n  \n  const updateAnts = () => {\n    ants.forEach(ant => ant.move())\n    ants.forEach(ant => ant.rotate())\n  }\n  \n  const step = () => {\n    if (!killed) {\n      steps++\n      updateAnts()\n    }\n  }\n  \n  let mouseInX = -1\n  let mouseInY = -1\n  let mode = 1\n  \n  const mousePressed = (p5) => {\n    if (!started) {\n      if (p5.mouseX > offleft && p5.mouseX < p5.width-offright && p5.mouseY > offtop && p5.mouseY < p5.height - offbottom) {\n        mouseInX = Math.floor((p5.mouseX - offleft) / sqsize)\n        mouseInY = Math.floor((p5.mouseY - offtop) / sqsize)\n        let lock = false\n        locked.forEach(([x,y,_]) => {\n          lock |= (mouseInX === x && mouseInY === y)\n        })\n        if (lock) {\n          return\n        }\n        grid[mouseInY][mouseInX] = 1 - grid[mouseInY][mouseInX]\n        mode = grid[mouseInY][mouseInX]\n        painted += grid[mouseInY][mouseInX]*2-1\n      }\n    }\n  }\n  \n  const mouseDragged = (p5) => {\n    if (!started) {\n      if (p5.mouseX > offleft && p5.mouseX < p5.width-offright && p5.mouseY > offtop && p5.mouseY < p5.height - offbottom) {\n        const x = Math.floor((p5.mouseX - offleft) / sqsize)\n        const y = Math.floor((p5.mouseY - offtop) / sqsize)\n        if (mouseInX === x && mouseInY === y) {\n          return\n        }\n        let lock = false\n        locked.forEach(([x_,y_,_]) => {\n          lock |= (x_ === x && y_ === y)\n        })\n        if (lock) {\n          return\n        }\n        const prev = grid[y][x]\n        grid[y][x] = mode\n        painted += mode - prev\n        mouseInX = x\n        mouseInY = y\n      }\n    }\n  }\n  \n  const test = () => {\n    for (let i = 0; i < antCount; i++) {\n      if (!ants[i].picnicAnt) {\n        continue\n      }\n      for (let j = i + 1; j < antCount; j++) {\n        if (!ants[j].picnicAnt) {\n          continue\n        }\n        if (ants[i].x === ants[j].x && ants[i].y === ants[j].y) {\n          ants[i].stop()\n          ants[j].stop()\n          if (!picnicExists) {\n            picnic.x = ants[i].x\n            picnic.y = ants[i].y\n            picnicExists = true\n          }\n        }\n      }\n    }\n    if (picnicExists) {\n      let stopCount = 0\n      for (let i = 0; i < antCount; i++) {\n        if (ants[i].x === picnic.x && ants[i].y === picnic.y) {\n          ants[i].stop()\n        }\n        if (ants[i].stopped) {\n          stopCount++\n        }\n      }\n      if (stopCount === antCount) {\n        killed = true\n      }\n    }\n  }\n\n  let winPos = 0\n  \n  const checkWin = () => {\n    let win = true\n    for (let i = 0; i < h; i++) {\n      win &= grid[i].reduce((acc,el) => (!el) && acc, true)\n    }\n    ants.forEach(ant => win &= (ant.x === picnic.x && ant.y === picnic.y))\n    won = win\n    winPos = -200\n  }\n\n  const draw = (p5) => {\n    p5.background(247)\n    p5.push()\n    p5.translate(offleft,offtop)\n    p5.stroke(0)\n    for (let i = 0; i < h; i++) {\n      for (let j = 0; j < w; j++) {\n        if (!!grid[i][j]) {\n          p5.fill(181)\n        } else {\n          p5.fill(255)\n        }\n        p5.rect(sqsize*j,sqsize*i,sqsize,sqsize)\n      }\n    }\n    locked.forEach(([x,y,_]) => {\n      p5.push()\n      p5.translate((x+0.86)*sqsize,(y+0.21)*sqsize)\n      p5.scale(sqsize/110)\n      p5.rectMode(p5.CENTER)\n      p5.fill(0)\n      p5.rect(0,0,18,18,4,4,4,4)\n      p5.strokeWeight(2)\n      p5.noFill()\n      p5.arc(0,-12,10,10,p5.PI,0)\n      p5.line(-5,-8,-5,-12)\n      p5.line(5,-8,5,-12)\n      p5.fill(255)\n      p5.noStroke()\n      p5.beginShape()\n      p5.vertex(-3,5)\n      p5.vertex(3,5)\n      p5.vertex(0,-4)\n      p5.endShape(p5.CLOSE)\n      p5.ellipse(0,-3,5)\n      p5.pop()\n    })\n    if (picnicExists) {\n      p5.push()\n      p5.translate((picnic.x+0.5)*sqsize,(picnic.y+0.54)*sqsize)\n      p5.scale(sqsize/40)\n      p5.rectMode(p5.CENTER)\n      p5.fill(254,184,102)\n      p5.stroke(0)\n      p5.strokeWeight(1)\n      p5.rect(0,-4.5,16,11,4,4,4,4)\n      p5.fill(255-grid[picnic.y][picnic.x]*74)\n      p5.rect(0,-4.5,12,7,2,2,2,2)\n      p5.fill(254,184,102)\n      p5.beginShape()\n      p5.vertex(-8,7)\n      p5.vertex(8,7)\n      p5.vertex(10,-3)\n      p5.vertex(-10,-3)\n      p5.endShape(p5.CLOSE)\n      p5.fill(254,95,103)\n      p5.line(-6,4.4,-4,4.4)\n      p5.line(6,4.4,4,4.4)\n      p5.line(-1,4.4,1,4.4)\n      p5.line(-2.7,2,-4.7,2)\n      p5.line(2.7,2,4.7,2)\n      p5.line(-7,-0.4,-5,-0.4)\n      p5.line(7,-0.4,5,-0.4)\n      p5.translate(0,0.5)\n      p5.beginShape()\n      p5.vertex(0,3)\n      p5.vertex(2,1)\n      p5.vertex(0,-1)\n      p5.vertex(-2,1)\n      p5.endShape(p5.CLOSE)\n      p5.beginShape()\n      p5.vertex(-6.5,-3.5)\n      p5.vertex(-4,-1)\n      p5.vertex(-1.5,-3.5)\n      p5.endShape(p5.CLOSE)\n      p5.beginShape()\n      p5.vertex(-2.5,-3.5)\n      p5.vertex(-0,-1)\n      p5.vertex(2.5,-3.5)\n      p5.endShape(p5.CLOSE)\n      p5.beginShape()\n      p5.vertex(6.5,-3.5)\n      p5.vertex(4,-1)\n      p5.vertex(1.5,-3.5)\n      p5.endShape(p5.CLOSE)\n      p5.fill(255)\n      p5.beginShape()\n      p5.vertex(-4,-1)\n      p5.vertex(-2,-3)\n      p5.vertex(0,-1)\n      p5.vertex(-2,1)\n      p5.endShape(p5.CLOSE)\n      p5.beginShape()\n      p5.vertex(4,-1)\n      p5.vertex(2,-3)\n      p5.vertex(0,-1)\n      p5.vertex(2,1)\n      p5.endShape(p5.CLOSE)\n      p5.pop()\n    }\n    ants.forEach(ant => ant.show(p5))\n    if (started && !killed) {\n      step()\n    }\n    if (!killed) {\n      test()\n    }\n    if (killed && won2 < 5) {\n      won2++\n    }\n    if (won2 === 3) {\n      p5.frameRate(60)\n    }\n    if (killed && won2 < 2) {\n      checkWin()\n    }\n    p5.fill(255)\n    p5.noStroke()\n    p5.fill(0)\n    p5.push()\n    p5.textSize(16)\n    p5.text(`Steps: ${steps}`,0,-bHeight-11)\n    p5.text(`Crumbs: ${painted}`,0,-10)\n    p5.textSize(28)\n    p5.text(`Level ${level}`,0,-2*bHeight-15)\n    p5.pop()\n    if (killed) {\n      p5.push()\n      if (winPos < p5.height - h*sqsize/4-14) {\n        winPos += 10;\n      }\n      p5.translate(w*sqsize/2,p5.height - winPos)\n      p5.fill(won ? p5.color(0,230,0,230) : p5.color(250,40,0,230))\n      p5.stroke(0)\n      p5.strokeWeight(2)\n      p5.rectMode(p5.CENTER)\n      p5.rect(0,0,315,90)\n      p5.textSize(30)\n      p5.fill(0)\n      p5.strokeWeight(0)\n      p5.textAlign(p5.CENTER,p5.CENTER)\n      p5.text(won ? \"You passed!\" : \"Try again?\",0,0)\n      p5.pop()\n    }\n    p5.pop()\n  }\n\n  class Ant {\n\n    constructor(x, y, dir, type) {\n      this.x = x;\n      this.y = y;\n      this.dir = dir;\n      this.type = type;\n      this.xmoves = [1,0,-1,0]\n      this.ymoves = [0,1,0,-1]\n      this.stopped = false\n      this.picnicAnt = !!this.type[3]\n    }\n  \n    stop() {\n      this.stopped = true\n    }\n  \n    move() {\n      if (this.stopped) {\n        return\n      }\n      const flip = this.type[2]\n  \n      switch (flip) {\n        case 'F':\n          grid[this.y][this.x] = 1 - grid[this.y][this.x]\n          painted += grid[this.y][this.x]*2-1\n          break\n        case 'W':\n          painted -= grid[this.y][this.x]\n          grid[this.y][this.x] = 0\n          break\n        case 'B':\n          painted += 1 - grid[this.y][this.x]\n          grid[this.y][this.x] = 1\n          break\n      }\n  \n      this.x += this.xmoves[this.dir]\n      this.y += this.ymoves[this.dir]\n      if (this.x >= w || this.x < 0 || this.y >= h || this.y < 0) {\n        this.stopped = true\n        killed = true\n      }\n    }\n  \n    rotate() {\n      if (this.stopped) {\n        return\n      }\n      const whiteMove = this.type[0]\n      const blackMove = this.type[1]\n  \n      const actualMove = !grid[this.y][this.x] ? whiteMove : blackMove\n      const moveIncs = {R: 1, L: 3, S: 0, U: 2}\n  \n      this.dir = (this.dir + moveIncs[actualMove]) % 4\n    }\n  \n    show(p5) {\n      p5.push()\n      p5.translate((this.x+0.5)*sqsize,(this.y+0.5)*sqsize)\n      p5.rotate(this.dir*p5.HALF_PI)\n      p5.stroke(0)\n      p5.strokeWeight(0.5)\n      if (this.type[0] === 'L' && this.type[1] === 'R') {\n        p5.fill(255,0,0)\n      }\n      if (this.type[1] === 'L' && this.type[0] === 'R') {\n        p5.fill(0,255,0)\n      }\n      p5.scale(sqsize/20)\n      p5.ellipse(-1,0,3.5)\n      p5.ellipse(2.5,0,3.5)\n      p5.push()\n      if (this.type[2] === 'B') {\n        p5.fill(0)\n      } else if (this.type[2] === 'W') {\n        p5.fill(255)\n      }\n      p5.ellipse(-4.5,0,3.5)\n      p5.pop()\n      p5.noFill()\n      p5.beginShape();\n      p5.vertex(4.2, 0.5);\n      p5.vertex(4.2, 0.5);\n      p5.curveVertex(5,0.8);\n      p5.vertex(6,2)\n      p5.vertex(6,2)\n      p5.endShape();\n      p5.beginShape();\n      p5.vertex(4.2, -0.5);\n      p5.vertex(4.2, -0.5);\n      p5.curveVertex(5,-0.8);\n      p5.vertex(6,-2)\n      p5.vertex(6,-2)\n      p5.endShape();\n      p5.fill(0)\n      if (this.picnicAnt) {\n        p5.ellipse(-1,0,1)\n      }\n      p5.pop()\n    }\n  }\n\n  return (\n    <Sketch setup={setup} draw={draw} mousePressed={mousePressed} mouseDragged={mouseDragged} />\n  )\n}\n\nexport default LevelCanvas\n","import React from 'react'\nimport {\n  Subtitle, HowToPara, EmptyDiv\n} from '../styles'\n\nconst Description = ({\n  level,\n}) => {\n  const nextLevel = parseInt(level)+1\n  switch (level) {\n    case '1':\n      return (\n        <>\n          <Subtitle>How to play:</Subtitle>\n          <HowToPara>\n            Ants behave in a very specific way, always in 3 stages. First, all ants modify whether their current square\n            has a crumb (shaded in). Second, all ants move forward one square in the direction they are facing.\n            Finally, all ants update the direction they are facing. Each ant will continuing moving like this until\n            it reaches the picnic location, at which point it stops indefinitely. If an ant moves out of bounds, the entire\n            simulation will halt. Otherwise, if eventually all ants reach the picnic location, you win only if there are\n            no crumbs left on the grid.\n          </HowToPara>\n          <HowToPara>\n            Click or drag cells to mark or unmark them. When you think you have a solution, hit \"Start\" to test it. If it's correct,\n            you'll pass the level! But if it isn't, hit \"Reset\" to reset the level. You can also change the speed of the simulation.\n          </HowToPara>\n          <HowToPara>\n            Levels will get more complex as we go on, so we'll introduce new elements as they come up. The first ant we have is\n            the green ant. In stage 1, green ants pick up a crumb if there is one and put one down if there isn't. In stage 3,\n            green ants turn left if there is a crumb and right if there isn't (\"L/R\").\n          </HowToPara>\n          <EmptyDiv/>\n          <Subtitle>Summary:</Subtitle>\n          <HowToPara>\n            <b>Green:</b> flip crumb, L/R\n          </HowToPara>\n          <EmptyDiv/>\n          <Subtitle>\n            Go to <a href={`https://jchboettcher.github.io/ants/${nextLevel}`}>next level</a>?\n          </Subtitle>\n        </>\n      )\n      break\n    case '2':\n      return (\n        <>\n          <Subtitle>New this level:</Subtitle>\n          <HowToPara>\n            Let's try with multiple ants! (full how-to-play <a href=\"https://jchboettcher.github.io/ants/1\">here</a>)\n          </HowToPara>\n          <EmptyDiv/>\n          <Subtitle>Summary:</Subtitle>\n          <HowToPara>\n            <b>Green:</b> flip crumb, L/R\n          </HowToPara>\n          <EmptyDiv/>\n          <Subtitle>\n            Go to <a href={`https://jchboettcher.github.io/ants/${nextLevel}`}>next level</a>?\n          </Subtitle>\n        </>\n      )\n      break\n    case '3':\n      return (\n        <>\n          <Subtitle>New this level:</Subtitle>\n          <HowToPara>\n            Nothing new! (full how-to-play <a href=\"https://jchboettcher.github.io/ants/1\">here</a>)\n          </HowToPara>\n          <EmptyDiv/>\n          <Subtitle>Summary:</Subtitle>\n          <HowToPara>\n            <b>Green:</b> flip crumb, L/R\n          </HowToPara>\n          <EmptyDiv/>\n          <Subtitle>\n            Go to <a href={`https://jchboettcher.github.io/ants/${nextLevel}`}>next level</a>?\n          </Subtitle>\n        </>\n      )\n      break\n    case '4':\n      return (\n        <>\n          <Subtitle>New this level:</Subtitle>\n          <HowToPara>\n            Here we introduce red ants. Red ants are exactly the same as green ants except they\n            turn the opposite direction in stage 3 (\"R/L\"). (full how-to-play <a href=\"https://jchboettcher.github.io/ants/1\">here</a>)\n          </HowToPara>\n          <EmptyDiv/>\n          <Subtitle>Summary:</Subtitle>\n          <HowToPara>\n            <b>Green:</b> flip crumb, L/R\n          </HowToPara>\n          <HowToPara>\n            <b>Red:</b> flip crumb, R/L\n          </HowToPara>\n          <EmptyDiv/>\n          <Subtitle>\n            Go to <a href={`https://jchboettcher.github.io/ants/${nextLevel}`}>next level</a>?\n          </Subtitle>\n        </>\n      )\n      break\n    case '5':\n      return (\n        <>\n          <Subtitle>New this level:</Subtitle>\n          <HowToPara>\n            Nothing new! (full how-to-play <a href=\"https://jchboettcher.github.io/ants/1\">here</a>)\n          </HowToPara>\n          <EmptyDiv/>\n          <Subtitle>Summary:</Subtitle>\n          <HowToPara>\n            <b>Green:</b> flip crumb, L/R\n          </HowToPara>\n          <HowToPara>\n            <b>Red:</b> flip crumb, R/L\n          </HowToPara>\n          <EmptyDiv/>\n          <Subtitle>\n            Go to <a href={`https://jchboettcher.github.io/ants/${nextLevel}`}>next level</a>?\n          </Subtitle>\n        </>\n      )\n      break\n    case '6':\n      return (\n        <>\n          <Subtitle>New this level:</Subtitle>\n          <HowToPara>\n            Here we introduce an entirely new type of ant-- a picnic ant! Picnic ants have a different \n            stopping condition than regular ants. They won't necessarily stop when they land on a picnic location (the \n            level still halts when they go out of bounds though). Instead, picnic ants stop when they land on\n            a square with another picnic ant(s) simultaneously. When this happens, they create a new picnic\n            location at this square. As such, there need not be an existing picnic location at the beginning\n            of a level that has picnic ants. However, if there <i>is</i> an existing picnic location at the start, or\n            if there are more than just 2 picnic ants, they all must meet at that same location because in order\n            to complete a level, all ants must stop on the same square. Of course, you also still have to end the\n            level with no crumbs left. A picnic ant is designated by a dot\n            on its middle segment. Colors still work the same way for picnic ants. (full how-to-play <a href=\"https://jchboettcher.github.io/ants/1\">here</a>)\n          </HowToPara>\n          <EmptyDiv/>\n          <Subtitle>Summary:</Subtitle>\n          <HowToPara>\n            <b>Green:</b> flip crumb, L/R\n          </HowToPara>\n          <HowToPara>\n            <b>Red:</b> flip crumb, R/L\n          </HowToPara>\n          <HowToPara>\n            <b>Dot:</b> picnic ant\n          </HowToPara>\n          <EmptyDiv/>\n          <Subtitle>\n            Go to <a href={`https://jchboettcher.github.io/ants/${nextLevel}`}>next level</a>?\n          </Subtitle>\n        </>\n      )\n      break\n    case '7':\n      return (\n        <>\n          <Subtitle>New this level:</Subtitle>\n          <HowToPara>\n            Here we introduce a new type of square. Locked squares simply mean that square must be \n            in that state in your initial set up. You cannot toggle whether or not locked squares have crumbs\n            at the start. (full how-to-play <a href=\"https://jchboettcher.github.io/ants/1\">here</a>)\n          </HowToPara>\n          <EmptyDiv/>\n          <Subtitle>Summary:</Subtitle>\n          <HowToPara>\n            <b>Green:</b> flip crumb, L/R\n          </HowToPara>\n          <HowToPara>\n            <b>Red:</b> flip crumb, R/L\n          </HowToPara>\n          <HowToPara>\n            <b>Dot:</b> picnic ant\n          </HowToPara>\n          <HowToPara>\n            <b>Lock:</b> locked square\n          </HowToPara>\n          <EmptyDiv/>\n          <Subtitle>\n            Go to <a href={`https://jchboettcher.github.io/ants/${nextLevel}`}>next level</a>?\n          </Subtitle>\n        </>\n      )\n      break\n    case '8':\n      return (\n        <>\n          <Subtitle>New this level:</Subtitle>\n          <HowToPara>\n            Three ants! (full how-to-play <a href=\"https://jchboettcher.github.io/ants/1\">here</a>)\n          </HowToPara>\n          <EmptyDiv/>\n          <Subtitle>Summary:</Subtitle>\n          <HowToPara>\n            <b>Green:</b> flip crumb, L/R\n          </HowToPara>\n          <HowToPara>\n            <b>Red:</b> flip crumb, R/L\n          </HowToPara>\n          <HowToPara>\n            <b>Dot:</b> picnic ant\n          </HowToPara>\n          <HowToPara>\n            <b>Lock:</b> locked square\n          </HowToPara>\n          <EmptyDiv/>\n          <Subtitle>\n            Go to <a href={`https://jchboettcher.github.io/ants/${nextLevel}`}>next level</a>?\n          </Subtitle>\n        </>\n      )\n      break\n    case '9':\n      return (\n        <>\n          <Subtitle>New this level:</Subtitle>\n          <HowToPara>\n            Here we introduce another variation on ants-- this time in regards\n            to stage 1, the crumb modification. Some ants are messier than others! Ants with a black\n            third segment will always leave a crumb in its square, and ants with a white third segment\n            will never leave a crumb. The main color still determines its direction change in stage 3 of an ant's movement.\n            (full how-to-play <a href=\"https://jchboettcher.github.io/ants/1\">here</a>)\n          </HowToPara>\n          <EmptyDiv/>\n          <Subtitle>Summary:</Subtitle>\n          <HowToPara>\n            <b>Green:</b> flip crumb, L/R\n          </HowToPara>\n          <HowToPara>\n            <b>Red:</b> flip crumb, R/L\n          </HowToPara>\n          <HowToPara>\n            <b>Dot:</b> picnic ant\n          </HowToPara>\n          <HowToPara>\n            <b>Lock:</b> locked square\n          </HowToPara>\n          <HowToPara>\n            <b>Black:</b> always crumb\n          </HowToPara>\n          <HowToPara>\n            <b>White:</b> never crumb\n          </HowToPara>\n          <EmptyDiv/>\n          <Subtitle>\n            Go to <a href={`https://jchboettcher.github.io/ants/${nextLevel}`}>next level</a>?\n          </Subtitle>\n        </>\n      )\n      break\n    case '10':\n      return (\n        <>\n          <Subtitle>New this level:</Subtitle>\n          <HowToPara>\n            CHALLENGE LEVEL! (full how-to-play <a href=\"https://jchboettcher.github.io/ants/1\">here</a>)\n          </HowToPara>\n          <EmptyDiv/>\n          <Subtitle>Summary:</Subtitle>\n          <HowToPara>\n            <b>Green:</b> flip crumb, L/R\n          </HowToPara>\n          <HowToPara>\n            <b>Red:</b> flip crumb, R/L\n          </HowToPara>\n          <HowToPara>\n            <b>Dot:</b> picnic ant\n          </HowToPara>\n          <HowToPara>\n            <b>Lock:</b> locked square\n          </HowToPara>\n          <HowToPara>\n            <b>Black:</b> always crumb\n          </HowToPara>\n          <HowToPara>\n            <b>White:</b> never crumb\n          </HowToPara>\n          <EmptyDiv/>\n          <Subtitle>\n            More levels coming soon!\n          </Subtitle>\n        </>\n      )\n      break\n    default: return (<></>)\n  }\n}\n\nexport default Description","import React, { useEffect } from 'react'\nimport {\n  BackgroundDiv, CenterDiv, LevelDiv, HowToPara,\n  Paragraph, Title, Subtitle, HowToDiv, EmptyDiv\n} from './styles'\nimport LevelCanvas from './components/LevelCanvas'\nimport Description from './components/Description'\n\nconst Level = ({ level }) => {\n  useEffect(() => {\n    document.title = `Picnic Ants - Level ${level}`\n  }, [])\n  return (\n    <CenterDiv>\n      <BackgroundDiv>\n          <Title>Picnic Ants</Title>\n          <Subtitle style={{fontStyle: 'italic', fontWeight: 'normal'}}>\n            Logic game by Jack Boettcher\n            (<a href=\"https://github.com/jchboettcher/ants\">source code</a>)\n          </Subtitle>\n          <Paragraph>\n            Picnic Ants is a logic game based largely on <a href=\"https://en.wikipedia.org/wiki/Langton%27s_ant\">Langton's Ant</a>.\n            The goal is to get the ants to their picnic without leaving a mess along the way.\n            Ants leave and pick up crumbs in squares they visit, and these crumbs help other ants (or themselves) determine\n            which directions they should turn. Your job is to set up an initial crumb trail so that\n            all the ants get to the picnic without going out of bounds. But remember, don't make a mess! You have to finish\n            with no crumbs left on the board.\n          </Paragraph>\n          <LevelDiv>\n            <LevelCanvas level={level} />\n            <HowToDiv>\n              <Description level={level} />\n              <EmptyDiv style={{height: '40px'}}/>\n              <Subtitle>To be implemented:</Subtitle>\n              <HowToPara>1. Leaderboard for challenge levels-- already have a backend and database set up.</HowToPara>\n              <HowToPara>2. Sandbox-- a playground testing environment.</HowToPara>\n              <HowToPara>3. Reverse mode-- given crumbs, place ants to clean them up.</HowToPara>\n              <HowToPara>4. More levels!</HowToPara>\n            </HowToDiv>\n          </LevelDiv>\n      </BackgroundDiv>\n    </CenterDiv>\n  )\n}\n\nexport default Level\n","import React from 'react'\nimport Level from '../Level'\n\nconst HomePage = () => (\n  <Level level='1'></Level>\n)\n\nexport default HomePage\n","import React from 'react'\nimport Level from '../Level'\nimport { useParams } from 'react-router-dom'\n\nconst LevelPage = () => {\n  const { level } = useParams()\n  return (\n    <Level level={level}></Level>\n  )\n}\n\nexport default LevelPage\n","import React from 'react'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport { Switch, Route, BrowserRouter as Router, Redirect } from 'react-router-dom'\nimport { ThemeProvider } from 'styled-components'\nimport theme from './theme'\nimport client from './client'\nimport HomePage from './containers/HomePage'\nimport LevelPage from './containers/LevelPage'\nimport gridStrs from './containers/Level/levels'\n\nconst numLevels = gridStrs.length\n\nconst App = () => (\n  <Router basename=\"/ants\">\n    <ThemeProvider theme={theme}>\n      <ApolloProvider client={client}>\n        <div className=\"App\">\n          <Switch>\n            <Route\n              exact path={`/:level(${[...Array(numLevels + 1).keys()].join(\"|\").substring(2)})`}\n              component={LevelPage}\n            />\n            <Route exact path=\"/\" component={HomePage} />\n            <Redirect to='/' />\n          </Switch>\n        </div>\n      </ApolloProvider>\n    </ThemeProvider>\n  </Router>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}