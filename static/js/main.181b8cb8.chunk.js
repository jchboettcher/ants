(this["webpackJsonppicnic-ants"]=this["webpackJsonppicnic-ants"]||[]).push([[0],{64:function(e,t,n){"use strict";n.r(t);var c,i,r,s,l,h,a,o,j,b=n(2),d=n(35),x=n.n(d),u=n(50),p=n(67),f=n(28),O=n(4),m=n(13),v={fonts:{primary:{family:"Arial, Helvetica, sans-serif"}}},g=n(39),y=n(52),w=n(51),L=n(38),R=n(9),k=new w.a({uri:"https://games-leaderboard-backend.herokuapp.com/",credentials:"include"}),S=new R.a((function(e,t){var n=localStorage.getItem("token");return n&&e.setContext({headers:{authorization:n}}),t(e)})),F=Object(L.a)((function(){})),E=new g.a({cache:new y.a,link:R.a.from([F,S,k])}),A=n(16),G=m.b.div(c||(c=Object(A.a)(["\n  display: flex;\n  flex-direction: column;\n"]))),C=m.b.div(i||(i=Object(A.a)(["\n  display: flex;\n  flex-direction: row;\n"]))),N=m.b.div(r||(r=Object(A.a)(["\n  padding: 5px 0px 30px 30px;\n  display: flex;\n  flex-direction: column;\n"]))),D=m.b.div(s||(s=Object(A.a)(["\n  display: flex;\n  justify-content: left;\n  margin-left: 60px;\n  margin-right: 60px;\n  margin-top: 10px;\n"]))),q=m.b.h1(l||(l=Object(A.a)(["\n  font-weight: bold;\n  font-size: 40px;\n  font-family: ",";\n  margin-bottom: 0;\n"])),(function(e){return e.theme.fonts.primary.family})),P=m.b.h3(h||(h=Object(A.a)(["\n  font-weight: bold;\n  font-size: 18px;\n  font-family: ",";\n  margin-top: 0;\n  margin-bottom: 0;\n"])),(function(e){return e.theme.fonts.primary.family})),W=m.b.p(a||(a=Object(A.a)(["\n  font-family: ",";\n  font-size: 15px;\n"])),(function(e){return e.theme.fonts.primary.family})),T=m.b.p(o||(o=Object(A.a)(["\n  font-family: ",";\n  font-size: 15px;\n  margin-bottom: 0px;\n"])),(function(e){return e.theme.fonts.primary.family})),Y=m.b.div(j||(j=Object(A.a)(["\n  height: 25px;\n"]))),B=n(45),I=n(46),z=n(24),H=n(47),M=n.n(H),U=["000000|000000|00P(URLF)00|000000|000000|000000","00000000|00000000|000(DRLF)0000|00000000|000P(URLF)000|00000000|00000000|00000000","00000000|00000000|0000(LRLF)000|00000000|00(URLF)P000|00000000|00000000|00000000","00000000|00(DLRF)00000|0(RRLF)000000|00000000|00000000|00000000|00000P00|00000000","000(DLRF)(DRLF)000|00000000|00000000|00000000|00000000|00000000|000P0000|00000000","000000|000000|00(RLRF+)000|000(DLRF+)00|000000|000000","000000|000000|00(RLRF+)000|000(DLRF+)10|000000|000000","00000000|00000000|00000000|00(DRLF+)0(URLF+)000|0000(URLF)000|00000000|00000000|00000000","00000000|0P000000|00000000|00000(LLRW)00|00000(LLRB)00|00000(LRLW)00|00000000|00000000","00000000000|000(DLRF)0000000|00(RRLF)00000000|00(RRLF)00000000|00000000(LRLF+)00|00000000000|0000(RRLF+)(DRLF)00000|00000000000|000(RRLF)00(DLRF)(LRLF)000|0000000(ULRF)000|00000000000"],X=n(0),J=function(e){var t,n,c,i,r=e.level,s=22,l=95,h=21,a=U[r-1],o=[],j=[],b=[],d=!1,x=!1,u=!1,p=0,f=0,O=0,m=!1,v={},g=4,y=4,w=function(){x||(f++,j.forEach((function(e){return e.move()})),j.forEach((function(e){return e.rotate()})))},L=-1,R=-1,k=1,S=0,F=function(){function e(t,n,c,i){Object(B.a)(this,e),this.x=t,this.y=n,this.dir=c,this.type=i,this.xmoves=[1,0,-1,0],this.ymoves=[0,1,0,-1],this.stopped=!1,this.picnicAnt=!!this.type[3]}return Object(I.a)(e,[{key:"stop",value:function(){this.stopped=!0}},{key:"move",value:function(){if(!this.stopped){switch(this.type[2]){case"F":o[this.y][this.x]=1-o[this.y][this.x],O+=2*o[this.y][this.x]-1;break;case"W":O-=o[this.y][this.x],o[this.y][this.x]=0;break;case"B":O+=1-o[this.y][this.x],o[this.y][this.x]=1}this.x+=this.xmoves[this.dir],this.y+=this.ymoves[this.dir],(this.x>=t||this.x<0||this.y>=n||this.y<0)&&(this.stopped=!0,x=!0)}}},{key:"rotate",value:function(){if(!this.stopped){var e=this.type[0],t=this.type[1],n=o[this.y][this.x]?t:e;this.dir=(this.dir+{R:1,L:3,S:0,U:2}[n])%4}}},{key:"show",value:function(e){e.push(),e.translate((this.x+.5)*c,(this.y+.5)*c),e.rotate(this.dir*e.HALF_PI),e.stroke(0),e.strokeWeight(.5),"L"===this.type[0]&&"R"===this.type[1]&&e.fill(255,0,0),"L"===this.type[1]&&"R"===this.type[0]&&e.fill(0,255,0),e.scale(c/20),e.ellipse(-1,0,3.5),e.ellipse(2.5,0,3.5),e.push(),"B"===this.type[2]?e.fill(0):"W"===this.type[2]&&e.fill(255),e.ellipse(-4.5,0,3.5),e.pop(),e.noFill(),e.beginShape(),e.vertex(4.2,.5),e.vertex(4.2,.5),e.curveVertex(5,.8),e.vertex(6,2),e.vertex(6,2),e.endShape(),e.beginShape(),e.vertex(4.2,-.5),e.vertex(4.2,-.5),e.curveVertex(5,-.8),e.vertex(6,-2),e.vertex(6,-2),e.endShape(),e.fill(0),this.picnicAnt&&e.ellipse(-1,0,1),e.pop()}}]),e}();return Object(X.jsx)(M.a,{setup:function(e,r){var w=function(){e.frameRate(60),x=!1,d=!1,u=!1,p=0,f=0,O=0;var r=0,s=0,l=a.length;m=!1;var h={R:0,D:1,L:2,U:3};j=[];for(var g=0;g<l;g++){var y=a[g];if("|"===y)s++,r=-1;else if("("===y){var w=h[a[g+1]],L=void 0;"+"===a[g+5]?(L=a.substring(g+2,g+6),g+=6):(L=a.substring(g+2,g+5),g+=5),j.push(new F(r,s,w,L))}else"P"===y?(m=!0,v.x=r,v.y=s):"1"===y?b.push([r,s,1]):"2"===y&&b.push([r,s,0]);r++}n=s+1,c=450/(t=r);for(var R=0;R<n;R++)o[R]=new Array(t),o[R].fill(0);b.forEach((function(e){var t=Object(z.a)(e,3),n=t[0],c=t[1],i=t[2];o[c][n]=i})),i=j.length};w();e.createCanvas(c*t+22+s,c*n+l+22).parent(r);for(var L=["Start","Reset","0.25x","0.5x","1x","2x","4x","8x"],R=[],k=[function(){d=!0,e.frameRate(y)},w,function(){R[2].style("background-color",e.color(190)),R[g].style("background-color",e.color(230)),y=1,g=2},function(){R[3].style("background-color",e.color(190)),R[g].style("background-color",e.color(230)),y=2,g=3},function(){R[4].style("background-color",e.color(190)),R[g].style("background-color",e.color(230)),y=4,g=4},function(){R[5].style("background-color",e.color(190)),R[g].style("background-color",e.color(230)),y=8,g=5},function(){R[6].style("background-color",e.color(190)),R[g].style("background-color",e.color(230)),y=16,g=6},function(){R[7].style("background-color",e.color(190)),R[g].style("background-color",e.color(230)),y=32,g=7}],S=0;S<L.length;S++){var E=e.createButton(L[S]);E.parent(r);var A=50.25;S<2&&(A*=3),E.size(A),h=E.height;var G=void 0;G=S<2?e.width-22-2*A+A*S-1:e.width-22-8*A+A*S-1,E.position(G,l-h-1-(S<2&&h+4)),E.mousePressed(k[S]),4===S?E.style("background-color",e.color(190)):S>=2&&E.style("background-color",e.color(230)),S>=2&&E.style("border-style","none"),R.push(E)}},draw:function(e){e.background(247),e.push(),e.translate(s,l),e.stroke(0);for(var a=0;a<n;a++)for(var g=0;g<t;g++)o[a][g]?e.fill(181):e.fill(255),e.rect(c*g,c*a,c,c);b.forEach((function(t){var n=Object(z.a)(t,3),i=n[0],r=n[1];n[2];e.push(),e.translate((i+.86)*c,(r+.21)*c),e.scale(c/110),e.rectMode(e.CENTER),e.fill(0),e.rect(0,0,18,18,4,4,4,4),e.strokeWeight(2),e.noFill(),e.arc(0,-12,10,10,e.PI,0),e.line(-5,-8,-5,-12),e.line(5,-8,5,-12),e.fill(255),e.noStroke(),e.beginShape(),e.vertex(-3,5),e.vertex(3,5),e.vertex(0,-4),e.endShape(e.CLOSE),e.ellipse(0,-3,5),e.pop()})),m&&(e.push(),e.translate((v.x+.5)*c,(v.y+.54)*c),e.scale(c/40),e.rectMode(e.CENTER),e.fill(254,184,102),e.stroke(0),e.strokeWeight(1),e.rect(0,-4.5,16,11,4,4,4,4),e.fill(255-74*o[v.y][v.x]),e.rect(0,-4.5,12,7,2,2,2,2),e.fill(254,184,102),e.beginShape(),e.vertex(-8,7),e.vertex(8,7),e.vertex(10,-3),e.vertex(-10,-3),e.endShape(e.CLOSE),e.fill(254,95,103),e.line(-6,4.4,-4,4.4),e.line(6,4.4,4,4.4),e.line(-1,4.4,1,4.4),e.line(-2.7,2,-4.7,2),e.line(2.7,2,4.7,2),e.line(-7,-.4,-5,-.4),e.line(7,-.4,5,-.4),e.translate(0,.5),e.beginShape(),e.vertex(0,3),e.vertex(2,1),e.vertex(0,-1),e.vertex(-2,1),e.endShape(e.CLOSE),e.beginShape(),e.vertex(-6.5,-3.5),e.vertex(-4,-1),e.vertex(-1.5,-3.5),e.endShape(e.CLOSE),e.beginShape(),e.vertex(-2.5,-3.5),e.vertex(-0,-1),e.vertex(2.5,-3.5),e.endShape(e.CLOSE),e.beginShape(),e.vertex(6.5,-3.5),e.vertex(4,-1),e.vertex(1.5,-3.5),e.endShape(e.CLOSE),e.fill(255),e.beginShape(),e.vertex(-4,-1),e.vertex(-2,-3),e.vertex(0,-1),e.vertex(-2,1),e.endShape(e.CLOSE),e.beginShape(),e.vertex(4,-1),e.vertex(2,-3),e.vertex(0,-1),e.vertex(2,1),e.endShape(e.CLOSE),e.pop()),j.forEach((function(t){return t.show(e)})),d&&!x&&w(),x||function(){for(var e=0;e<i;e++)if(j[e].picnicAnt)for(var t=e+1;t<i;t++)j[t].picnicAnt&&j[e].x===j[t].x&&j[e].y===j[t].y&&(j[e].stop(),j[t].stop(),m||(v.x=j[e].x,v.y=j[e].y,m=!0));if(m){for(var n=0,c=0;c<i;c++)j[c].x===v.x&&j[c].y===v.y&&j[c].stop(),j[c].stopped&&n++;n===i&&(x=!0)}}(),x&&p<5&&p++,3===p&&e.frameRate(60),x&&p<2&&function(){for(var e=!0,t=0;t<n;t++)e&=o[t].reduce((function(e,t){return!t&&e}),!0);j.forEach((function(t){return e&=t.x===v.x&&t.y===v.y})),u=e,S=-200}(),e.fill(255),e.noStroke(),e.fill(0),e.push(),e.textSize(16),e.text("Steps: ".concat(f),0,-h-11),e.text("Crumbs: ".concat(O),0,-10),e.textSize(28),e.text("Level ".concat(r),0,-2*h-15),e.pop(),x&&(e.push(),S<e.height-n*c/4-14&&(S+=10),e.translate(t*c/2,e.height-S),e.fill(u?e.color(0,230,0,230):e.color(250,40,0,230)),e.stroke(0),e.strokeWeight(2),e.rectMode(e.CENTER),e.rect(0,0,315,90),e.textSize(30),e.fill(0),e.strokeWeight(0),e.textAlign(e.CENTER,e.CENTER),e.text(u?"You passed!":"Try again?",0,0),e.pop()),e.pop()},mousePressed:function(e){if(!d&&e.mouseX>s&&e.mouseX<e.width-22&&e.mouseY>l&&e.mouseY<e.height-22){L=Math.floor((e.mouseX-s)/c),R=Math.floor((e.mouseY-l)/c);var t=!1;if(b.forEach((function(e){var n=Object(z.a)(e,3),c=n[0],i=n[1];n[2];t|=L===c&&R===i})),t)return;o[R][L]=1-o[R][L],k=o[R][L],O+=2*o[R][L]-1}},mouseDragged:function(e){if(!d&&e.mouseX>s&&e.mouseX<e.width-22&&e.mouseY>l&&e.mouseY<e.height-22){var t=Math.floor((e.mouseX-s)/c),n=Math.floor((e.mouseY-l)/c);if(L===t&&R===n)return;var i=!1;if(b.forEach((function(e){var c=Object(z.a)(e,3),r=c[0],s=c[1];c[2];i|=r===t&&s===n})),i)return;var r=o[n][t];o[n][t]=k,O+=k-r,L=t,R=n}}})},V=function(e){var t=e.level,n=parseInt(t)+1;switch(t){case"1":return Object(X.jsxs)(X.Fragment,{children:[Object(X.jsx)(P,{children:"How to play:"}),Object(X.jsx)(T,{children:"Ants behave in a very specific way, always in 3 stages. First, all ants modify whether their current square has a crumb (shaded in). Second, all ants move forward one square in the direction they are facing. Finally, all ants update the direction they are facing. Each ant will continuing moving like this until it reaches the picnic location, at which point it stops indefinitely. If an ant moves out of bounds, the entire simulation will halt. Otherwise, if eventually all ants reach the picnic location, you win only if there are no crumbs left on the grid."}),Object(X.jsx)(T,{children:'Click or drag cells to mark or unmark them. When you think you have a solution, hit "Start" to test it. If it\'s correct, you\'ll pass the level! But if it isn\'t, hit "Reset" to reset the level. You can also change the speed of the simulation.'}),Object(X.jsx)(T,{children:"Levels will get more complex as we go on, so we'll introduce new elements as they come up. The first ant we have is the green ant. In stage 1, green ants pick up a crumb if there is one and put one down if there isn't. In stage 3, green ants turn left if there is a crumb and right if there isn't (\"L/R\")."}),Object(X.jsx)(Y,{}),Object(X.jsx)(P,{children:"Summary:"}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Green:"})," flip crumb, L/R"]}),Object(X.jsx)(Y,{}),Object(X.jsxs)(P,{children:["Go to ",Object(X.jsx)("a",{href:"https://jchboettcher.github.io/ants/".concat(n),children:"next level"}),"?"]})]});case"2":return Object(X.jsxs)(X.Fragment,{children:[Object(X.jsx)(P,{children:"New this level:"}),Object(X.jsxs)(T,{children:["Let's try with multiple ants! (full how-to-play ",Object(X.jsx)("a",{href:"https://jchboettcher.github.io/ants/1",children:"here"}),")"]}),Object(X.jsx)(Y,{}),Object(X.jsx)(P,{children:"Summary:"}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Green:"})," flip crumb, L/R"]}),Object(X.jsx)(Y,{}),Object(X.jsxs)(P,{children:["Go to ",Object(X.jsx)("a",{href:"https://jchboettcher.github.io/ants/".concat(n),children:"next level"}),"?"]})]});case"3":return Object(X.jsxs)(X.Fragment,{children:[Object(X.jsx)(P,{children:"New this level:"}),Object(X.jsxs)(T,{children:["Nothing new! (full how-to-play ",Object(X.jsx)("a",{href:"https://jchboettcher.github.io/ants/1",children:"here"}),")"]}),Object(X.jsx)(Y,{}),Object(X.jsx)(P,{children:"Summary:"}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Green:"})," flip crumb, L/R"]}),Object(X.jsx)(Y,{}),Object(X.jsxs)(P,{children:["Go to ",Object(X.jsx)("a",{href:"https://jchboettcher.github.io/ants/".concat(n),children:"next level"}),"?"]})]});case"4":return Object(X.jsxs)(X.Fragment,{children:[Object(X.jsx)(P,{children:"New this level:"}),Object(X.jsxs)(T,{children:['Here we introduce red ants. Red ants are exactly the same as green ants except they turn the opposite direction in stage 3 ("R/L"). (full how-to-play ',Object(X.jsx)("a",{href:"https://jchboettcher.github.io/ants/1",children:"here"}),")"]}),Object(X.jsx)(Y,{}),Object(X.jsx)(P,{children:"Summary:"}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Green:"})," flip crumb, L/R"]}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Red:"})," flip crumb, R/L"]}),Object(X.jsx)(Y,{}),Object(X.jsxs)(P,{children:["Go to ",Object(X.jsx)("a",{href:"https://jchboettcher.github.io/ants/".concat(n),children:"next level"}),"?"]})]});case"5":return Object(X.jsxs)(X.Fragment,{children:[Object(X.jsx)(P,{children:"New this level:"}),Object(X.jsxs)(T,{children:["Nothing new! (full how-to-play ",Object(X.jsx)("a",{href:"https://jchboettcher.github.io/ants/1",children:"here"}),")"]}),Object(X.jsx)(Y,{}),Object(X.jsx)(P,{children:"Summary:"}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Green:"})," flip crumb, L/R"]}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Red:"})," flip crumb, R/L"]}),Object(X.jsx)(Y,{}),Object(X.jsxs)(P,{children:["Go to ",Object(X.jsx)("a",{href:"https://jchboettcher.github.io/ants/".concat(n),children:"next level"}),"?"]})]});case"6":return Object(X.jsxs)(X.Fragment,{children:[Object(X.jsx)(P,{children:"New this level:"}),Object(X.jsxs)(T,{children:["Here we introduce an entirely new type of ant-- a picnic ant! Picnic ants have a different stopping condition than regular ants. They won't necessarily stop when they land on a picnic location (the level still halts when they go out of bounds though). Instead, picnic ants stop when they land on a square with another picnic ant(s) simultaneously. When this happens, they create a new picnic location at this square. As such, there need not be an existing picnic location at the beginning of a level that has picnic ants. However, if there ",Object(X.jsx)("i",{children:"is"})," an existing picnic location at the start, or if there are more than just 2 picnic ants, they all must meet at that same location because in order to complete a level, all ants must stop on the same square. Of course, you also still have to end the level with no crumbs left. A picnic ant is designated by a dot on its middle segment. Colors still work the same way for picnic ants. (full how-to-play ",Object(X.jsx)("a",{href:"https://jchboettcher.github.io/ants/1",children:"here"}),")"]}),Object(X.jsx)(Y,{}),Object(X.jsx)(P,{children:"Summary:"}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Green:"})," flip crumb, L/R"]}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Red:"})," flip crumb, R/L"]}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Dot:"})," picnic ant"]}),Object(X.jsx)(Y,{}),Object(X.jsxs)(P,{children:["Go to ",Object(X.jsx)("a",{href:"https://jchboettcher.github.io/ants/".concat(n),children:"next level"}),"?"]})]});case"7":return Object(X.jsxs)(X.Fragment,{children:[Object(X.jsx)(P,{children:"New this level:"}),Object(X.jsxs)(T,{children:["Here we introduce a new type of square. Locked squares simply mean that square must be in that state in your initial set up. You cannot toggle whether or not locked squares have crumbs at the start. (full how-to-play ",Object(X.jsx)("a",{href:"https://jchboettcher.github.io/ants/1",children:"here"}),")"]}),Object(X.jsx)(Y,{}),Object(X.jsx)(P,{children:"Summary:"}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Green:"})," flip crumb, L/R"]}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Red:"})," flip crumb, R/L"]}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Dot:"})," picnic ant"]}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Lock:"})," locked square"]}),Object(X.jsx)(Y,{}),Object(X.jsxs)(P,{children:["Go to ",Object(X.jsx)("a",{href:"https://jchboettcher.github.io/ants/".concat(n),children:"next level"}),"?"]})]});case"8":return Object(X.jsxs)(X.Fragment,{children:[Object(X.jsx)(P,{children:"New this level:"}),Object(X.jsxs)(T,{children:["Three ants! (full how-to-play ",Object(X.jsx)("a",{href:"https://jchboettcher.github.io/ants/1",children:"here"}),")"]}),Object(X.jsx)(Y,{}),Object(X.jsx)(P,{children:"Summary:"}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Green:"})," flip crumb, L/R"]}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Red:"})," flip crumb, R/L"]}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Dot:"})," picnic ant"]}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Lock:"})," locked square"]}),Object(X.jsx)(Y,{}),Object(X.jsxs)(P,{children:["Go to ",Object(X.jsx)("a",{href:"https://jchboettcher.github.io/ants/".concat(n),children:"next level"}),"?"]})]});case"9":return Object(X.jsxs)(X.Fragment,{children:[Object(X.jsx)(P,{children:"New this level:"}),Object(X.jsxs)(T,{children:["Here we introduce another variation on ants-- this time in regards to stage 1, the crumb modification. Some ants are messier than others! Ants with a black third segment will always leave a crumb in its square, and ants with a white third segment will never leave a crumb. The main color still determines its direction change in stage 3 of an ant's movement. (full how-to-play ",Object(X.jsx)("a",{href:"https://jchboettcher.github.io/ants/1",children:"here"}),")"]}),Object(X.jsx)(Y,{}),Object(X.jsx)(P,{children:"Summary:"}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Green:"})," flip crumb, L/R"]}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Red:"})," flip crumb, R/L"]}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Dot:"})," picnic ant"]}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Lock:"})," locked square"]}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Black:"})," always crumb"]}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"White:"})," never crumb"]}),Object(X.jsx)(Y,{}),Object(X.jsxs)(P,{children:["Go to ",Object(X.jsx)("a",{href:"https://jchboettcher.github.io/ants/".concat(n),children:"next level"}),"?"]})]});case"10":return Object(X.jsxs)(X.Fragment,{children:[Object(X.jsx)(P,{children:"New this level:"}),Object(X.jsxs)(T,{children:["CHALLENGE LEVEL! (full how-to-play ",Object(X.jsx)("a",{href:"https://jchboettcher.github.io/ants/1",children:"here"}),")"]}),Object(X.jsx)(Y,{}),Object(X.jsx)(P,{children:"Summary:"}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Green:"})," flip crumb, L/R"]}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Red:"})," flip crumb, R/L"]}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Dot:"})," picnic ant"]}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Lock:"})," locked square"]}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"Black:"})," always crumb"]}),Object(X.jsxs)(T,{children:[Object(X.jsx)("b",{children:"White:"})," never crumb"]}),Object(X.jsx)(Y,{}),Object(X.jsx)(P,{children:"More levels coming soon!"})]});default:return Object(X.jsx)(X.Fragment,{})}},_=function(e){var t=e.level;return Object(b.useEffect)((function(){document.title="Picnic Ants - Level ".concat(t)}),[]),Object(X.jsx)(D,{children:Object(X.jsxs)(G,{children:[Object(X.jsx)(q,{children:"Picnic Ants"}),Object(X.jsxs)(P,{style:{fontStyle:"italic",fontWeight:"normal"},children:["Logic game by Jack Boettcher (",Object(X.jsx)("a",{href:"https://github.com/jchboettcher/ants",children:"source code"}),")"]}),Object(X.jsxs)(W,{children:["Picnic Ants is a logic game based largely on ",Object(X.jsx)("a",{href:"https://en.wikipedia.org/wiki/Langton%27s_ant",children:"Langton's Ant"}),". The goal is to get the ants to their picnic without leaving a mess along the way. Ants leave and pick up crumbs in squares they visit, and these crumbs help other ants (or themselves) determine which directions they should turn. Your job is to set up an initial crumb trail so that all the ants get to the picnic without going out of bounds. But remember, don't make a mess! You have to finish with no crumbs left on the board."]}),Object(X.jsxs)(C,{children:[Object(X.jsx)(J,{level:t}),Object(X.jsxs)(N,{children:[Object(X.jsx)(V,{level:t}),Object(X.jsx)(Y,{style:{height:"40px"}}),Object(X.jsx)(P,{children:"To be implemented:"}),Object(X.jsx)(T,{children:"1. Leaderboard for challenge levels-- already have a backend and database set up."}),Object(X.jsx)(T,{children:"2. Sandbox-- a playground testing environment."}),Object(X.jsx)(T,{children:"3. Reverse mode-- given crumbs, place ants to clean them up."}),Object(X.jsx)(T,{children:"4. More levels!"})]})]})]})})},K=function(){return Object(X.jsx)(_,{level:"1"})},Q=function(){var e=Object(O.g)().level;return Object(X.jsx)(_,{level:e})},Z=U.length,$=function(){return Object(X.jsx)(f.a,{basename:"/ants",children:Object(X.jsx)(m.a,{theme:v,children:Object(X.jsx)(p.a,{client:E,children:Object(X.jsx)("div",{className:"App",children:Object(X.jsxs)(O.d,{children:[Object(X.jsx)(O.b,{exact:!0,path:"/:level(".concat(Object(u.a)(Array(Z+1).keys()).join("|").substring(2),")"),component:Q}),Object(X.jsx)(O.b,{exact:!0,path:"/",component:K}),Object(X.jsx)(O.a,{to:"/"})]})})})})})};x.a.render(Object(X.jsx)($,{}),document.getElementById("root"))}},[[64,1,2]]]);
//# sourceMappingURL=main.181b8cb8.chunk.js.map