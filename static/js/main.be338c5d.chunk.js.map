{"version":3,"sources":["theme.js","client.js","config.js","containers/Level/index.js","containers/HomePage/index.js","containers/LevelPage/index.js","App.js","index.js"],"names":["theme","colors","primaryText","mainBackground","fonts","primary","family","weight","httpLink","HttpLink","uri","credentials","middlewareLink","ApolloLink","operation","forward","token","localStorage","getItem","setContext","headers","authorization","errorLink","onError","client","ApolloClient","cache","InMemoryCache","link","from","Home","level","useEffect","document","title","HomePage","Level","useParams","App","basename","className","exact","path","Array","numLevels","keys","join","substring","component","LevelPage","ReactDOM","render","getElementById"],"mappings":"6KAeeA,EAbD,CACZC,OAAQ,CACNC,YAAa,UACbC,eAAgB,WAElBC,MAAO,CACLC,QAAS,CACPC,OAAQ,8BACRC,OAAQ,O,wCCHRC,EAAW,IAAIC,IAAS,CAC5BC,ICPY,kDDQZC,YAAa,YAITC,EAAiB,IAAIC,KAAW,SAACC,EAAWC,GAChD,IAAMC,EAAQC,aAAaC,QAAQ,SASnC,OARIF,GACFF,EAAUK,WAAW,CACnBC,QAAS,CACPC,cAAeL,KAKdD,EAAQD,MAGXQ,EAAYC,aAAQ,eAcXC,EATA,IAAIC,IAAa,CAC9BC,MAAO,IAAIC,IACXC,KAAMf,IAAWgB,KAAK,CACpBP,EACAV,EACAJ,M,QEbWsB,EAfF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAId,OAHAC,qBAAU,WACRC,SAASC,MAAT,gBAA0BH,KACzB,IAED,uDAAwBA,MCNbI,EAJE,kBACf,cAACC,EAAD,CAAOL,MAAM,OCOAI,EAPE,WAAO,IACdJ,EAAUM,cAAVN,MACR,OACE,cAACK,EAAD,CAAOL,MAAOA,KCsBHO,EAlBH,kBACV,cAAC,IAAD,CAAQC,SAAS,QAAjB,SACE,cAAC,IAAD,CAAevC,MAAOA,EAAtB,SACE,cAAC,iBAAD,CAAgBwB,OAAQA,EAAxB,SACE,qBAAKgB,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,OAAK,EAACC,KAAI,kBAAa,YAAIC,MAAMC,IAAeC,QAAQC,KAAK,KAAKC,UAAU,GAAlE,KACVC,UAAWC,IAEb,cAAC,IAAD,CAAOP,KAAK,IAAIM,UAAWb,gBCjBvCe,IAASC,OAAO,cAAC,EAAD,IAASlB,SAASmB,eAAe,W","file":"static/js/main.be338c5d.chunk.js","sourcesContent":["// Add global styles and fonts here\n\nconst theme = {\n  colors: {\n    primaryText: '#232323',\n    mainBackground: '#F2F2F2',\n  },\n  fonts: {\n    primary: {\n      family: 'Source Sans Pro, sans-serif',\n      weight: 400,\n    },\n  },\n}\n\nexport default theme\n","import { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\nimport { onError } from 'apollo-link-error'\nimport { ApolloLink } from 'apollo-link'\nimport config from './config'\n\nconst httpLink = new HttpLink({\n  uri: config.graphqlUrl,\n  credentials: 'include',\n})\n\n\nconst middlewareLink = new ApolloLink((operation, forward) => {\n  const token = localStorage.getItem('token')\n  if (token) {\n    operation.setContext({\n      headers: {\n        authorization: token,\n      },\n    })\n  }\n\n  return forward(operation)\n})\n\nconst errorLink = onError(() => {\n  // Handle specific errors here\n  //   e.g. redirect to login on AuthenticationError\n})\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: ApolloLink.from([\n    errorLink,\n    middlewareLink,\n    httpLink,\n  ]),\n})\n\nexport default client\n","export default {\n  graphqlUrl: 'https://ants-on-a-picnic-backend.herokuapp.com/',\n}\n","import React, { useEffect } from 'react'\n// import Scores from './components/Scores'\n// import {\n//   LeaderboardDiv,\n//   BackgroundDiv,\n//   LeaderboardHeader,\n// } from './styles'\n\nconst Home = ({ level }) => {\n  useEffect(() => {\n    document.title = `Level ${level}`\n  }, [])\n  return (\n    <div>{`Hello world... ${level}`}</div>\n    // <BackgroundDiv>\n    //   <LeaderboardDiv>\n    //     <LeaderboardHeader>Leaderboard</LeaderboardHeader>\n    //     <Scores/>\n    //   </LeaderboardDiv>\n    // </BackgroundDiv>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport Level from '../Level'\n\nconst HomePage = () => (\n  <Level level='1'></Level>\n)\n\nexport default HomePage\n","import React from 'react'\nimport Level from '../Level'\nimport { useParams } from 'react-router-dom'\n\nconst HomePage = () => {\n  const { level } = useParams()\n  return (\n    <Level level={level}></Level>\n  )\n}\n\nexport default HomePage\n","import React from 'react'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom'\nimport { ThemeProvider } from 'styled-components'\nimport theme from './theme'\nimport client from './client'\nimport HomePage from './containers/HomePage'\nimport LevelPage from './containers/LevelPage'\n\nconst numLevels = 10\n\nconst App = () => (\n  <Router basename=\"/ants\">\n    <ThemeProvider theme={theme}>\n      <ApolloProvider client={client}>\n        <div className=\"App\">\n          <Switch>\n            <Route\n              exact path={`/:level(${[...Array(numLevels + 1).keys()].join(\"|\").substring(2)})`}\n              component={LevelPage}\n            />\n            <Route path=\"/\" component={HomePage} />\n          </Switch>\n        </div>\n      </ApolloProvider>\n    </ThemeProvider>\n  </Router>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}